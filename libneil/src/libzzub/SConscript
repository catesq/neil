#encoding: latin-1

# libzzub, Buzï¿½, Aldrin
# Modular Sequencer
# Copyright (C) 2006 The Aldrin Development Team
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

Import('env', 'install_lib', 'install')
import glob

#######################################
#
# libzzub shared library
#
#######################################


localenv = env.Clone()


files = [
    'compress.cpp',
    'decompress.cpp',
    'dummy.cpp',
    'host.cpp',
    'libzzub.cpp',
    'driver.cpp',
    'master.cpp',
    'player.cpp',
    'pluginloader.cpp',
    'tools.cpp',
    'wavetable.cpp',
    'midi_driver.cpp',
    'midi_track.cpp',
    'recorder.cpp',
    'ccm.cpp',
    'connections.cpp',
    'input.cpp',
    'operations.cpp',
    'output.cpp',
    'song.cpp',
    'synchronization.cpp',
    'undo.cpp',
    'thread_id.cpp',
    'driver_portaudio.cpp',
    'driver_rainout.cpp',
]


localenv.Append(
    LIBS=[
        'FLAC',
        'z',
        'mad',
        'mpg123',
        'pthread',
        localenv['LIB_DL'],
        localenv['LIB_COMPAT'],
        'pugixml',
        'minizip-ng',
        'ssl',
        'pthread',
        'm',
        'portaudio',
        'portmidi',
    ],
    CCFLAGS=[
        '-D_LIB', 
        '-D_LIBZZUB',
        # '-I${BUILD_PATH}/include/'
    ]
)


if localenv['USE_SIGNATURE'] == True:
    localenv.Append(CCFLAGS=['-DUSE_SIGNATURE'])


if localenv['SNDFILE']:
    localenv.Append(
        LIBS=[ 'sndfile' ],
        CCFLAGS=[ '-DUSE_SNDFILE' ]
    )


#######################################
# targets
#######################################

shlibsuffix = localenv['SHLIBSUFFIX']
localenv['SHLIBSUFFIX'] += '.' + env['LIBZZUB_VERSION']
libzzub = localenv.SharedLibrary('${LIB_BUILD_PATH}/zzub', files)
installed_libzzub = install_lib(libzzub)
vcomps = env['LIBZZUB_VERSION'].split('.')
for i in range(len(vcomps)):
    v = '.'.join(vcomps[:i])
    if v:
        v = '.'+v
    symlinkcmd = 'cd $TARGET.dir && rm -f $TARGET.name && ln -s $SOURCE.name $TARGET.name'
    localenv.Command('${LIB_BUILD_PATH}/libzzub'+shlibsuffix+v, libzzub, symlinkcmd)
    localenv.Command('${DESTDIR}${PREFIX}${LIBDIR}/libzzub'+shlibsuffix+v, installed_libzzub, symlinkcmd)

