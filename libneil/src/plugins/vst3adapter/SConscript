import sys, os
Import('pluginenv', 'build_plugin')


vst_cmake_file = pluginenv.FindFile('CMakeLists.txt', 'vst3sdk')

if not vst_cmake_file:
    print("libneil/src/plugins/vst3adapter/vst3sdk/CMakeLists.txt not found. Maybe 'git submodule --init --update' to get the VST3 SDK.")
    sys.exit()


vst_build_dir = 'vst3-debug-build' if pluginenv['DEBUG'] else 'vst3-release-build'


vst3_pluginenv = pluginenv.Clone()


vst_static_libs = [
    'base', 
    'pluginterfaces', 
    'sdk', 
    'sdk_common', 
    'sdk_hosting', 
    'vstgui', 
    'vstgui_standalone', 
    'vstgui_support', 
    'vstgui_uidescription'
]


common_sdk_sources = [
    "vst3sdk/public.sdk/source/vst/hosting/connectionproxy.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/eventlist.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/hostclasses.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/module.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/parameterchanges.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/pluginterfacesupport.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/plugprovider.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/processdata.cpp",
    "vst3sdk/public.sdk/source/vst/utility/stringconvert.cpp",
    "vst3sdk/public.sdk/source/vst/vstinitiids.cpp",
]


linux_sdk_sources = [
    "vst3sdk/public.sdk/source/common/threadchecker_linux.cpp",
    "vst3sdk/public.sdk/source/vst/hosting/module_linux.cpp",
]


windows_sdk_sources = [
    "vst3sdk/public.sdk/source/vst/hosting/module_win32.cpp",
]


mac_sdk_sources = [
    "vst3sdk/public.sdk/source/vst/hosting/module_mac.mm",
]


vst3_pluginenv.Append(
    CCFLAGS='''
    -pthread `pkg-config gtk+-3.0 --cflags` 
    --include=stdint.h
    -Ilibneil/src/libzzub -Ilibneil/src/utils/ -Ilibneil/src/plugins/vst3adapter/ 
    -Ilibneil/src/plugins/vst3adapter/vst3sdk -Ilibneil/src/plugins/vst3adapter/pluginterfaces 
    -Ilibneil/src/plugins/vst3adapter/public.sdk -Ilibneil/src/plugins/vst3adapter/base 
    -Ilibneil/src/plugins/vst3adapter/vst4gui/vstgui''',
    LIBS=['boost_system', 'boost_filesystem', 'stdc++fs', 'zzub'] + vst_static_libs, 
    LIBPATH=os.path.join(vst_build_dir, 'lib'),

)


adapter_sources = ['vst3_adapter.cpp', 'vst3_plugins.cpp', 'vst3_info.cpp', 'vst3_param.cpp', 'vst3_defines.cpp']


vst3_build = build_plugin(
    vst3_pluginenv, 
    'vst3adapter', 
    adapter_sources + common_sdk_sources + linux_sdk_sources
)