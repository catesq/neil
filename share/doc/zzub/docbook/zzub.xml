<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<book lang="en">
  <bookinfo>
    <title>libzzub User Manual</title>

    <authorgroup>
      <author>
        <firstname>Leonard</firstname>

        <surname>Ritter</surname>
      </author>
    </authorgroup>

    <date>02/04/2007</date>

    <releaseinfo>0.2.2</releaseinfo>

    <copyright>
      <year>2007</year>

      <holder>The libzzub Development Team</holder>
    </copyright>

    <abstract>
      <para>This book describes installation, configuration and usage of libzzub, a powerful
      music sequencing library for the GNU/Linux operating system.</para>
    </abstract>
  </bookinfo>

  <chapter id="introduction">
    <title>Introduction</title>

    <para>Welcome to the libzzub User Manual. This book helps you with
	configuration, installation and usage of libzzub, a powerful music sequencing
	library for the GNU/Linux operating system. If you are searching for a
	foundation of your next Soundtracker, libzzub is what you want. libzzub
	provides an extensible DSP plugin system, a wavetable, instruments, a
	multitrack sequencer, support for major soundcard API's and full compatibility
	with Jeskola Buzz on the Windows platform.</para>

    <para>libzzub is currently being utilized as a core part of <ulink url="http://aldrin.sf.net">Aldrin</ulink>,
	<ulink url="http://trac.zeitherrschaft.org/buze">Buzé</ulink> and <ulink url="http://www.buzzrmx.com">Buzz RMX</ulink>.
	A <ulink url="http://www.zzub.org">community website</ulink> revolving around these programs is currently being built.
	</para>

  </chapter>

    <chapter id="installation">
      <title>Installation</title>
	  <sect1 id="install_libzzub">
	  <title>Building and installing libzzub</title>
	  <para>If you use a popular distribution of GNU/Linux,
      chances are that your local package manager already offers a libzzub
      package. If not, you will need to build libzzub yourself.</para>
	  
      <para>Independent of which distribution you use, building and installing
      libzzub shouldn't be hard, given that you follow this guide. If you have
      trouble installing libzzub, please contact your distribution maintainers
      and ask them to include support for libzzub.</para>

	  <para>libzzub consists of several components which have different
	  requirements. Some of these may already come with the distro that
	  you are using, some are a bit exotic and require individual building.
	  We have focused on keeping the number of dependencies small and to include
	  as much as required in the distribution package itself. Lunar, the 
	  DSP plugin host of libzzub, supports the latest version of LLVM,
	  a JIT compiler suite that is presently not common in all distributions.
	  This is an optional backend.</para>
	  
	  <para>In order to assist you with building libzzub, libzzub features an
	  extensive configuration process that notifies you of missing dependencies.</para>

      <para>First make sure that you have all programs and libraries installed
      required to build libzzub. Usually, all of them should be provided by
      your distribution of GNU/Linux. Please check with your distributions
      package manager documentation on how to search and install packages. You
      are going to need following packages:</para>

      <itemizedlist>
        <listitem>
          <para><ulink url="http://www.python.org/">Python 2.4</ulink> or
          later.</para>
        </listitem>

        <listitem>
          <para><ulink url="http://www.scons.org/">SCons 0.96.94</ulink> or
          later.</para>
        </listitem>

        <listitem>
          <para><ulink url="http://gcc.gnu.org/">GCC 4.0.1</ulink> or later.</para>
        </listitem>

        <listitem>
          <para><ulink url="http://www.zlib.net/">zlib</ulink></para>
        </listitem>
		
		<listitem>
		  <para><ulink url="http://www.mega-nerd.com/libsndfile/">libsndfile 1.0.17</ulink></para>
		</listitem>

        <listitem>
          <para>(Optional) <ulink url="http://www.llvm.org/">LLVM 1.9</ulink>.</para>
        </listitem>

        <listitem>
          <para>(Optional) <ulink url="http://www.llvm.org/">llvm-gcc 4.0.1</ulink> or later, built for LLVM 1.9.</para>
        </listitem>

      </itemizedlist>
	  
	  <para>Depending on which sound API you wish to use, following libraries
	  are required as well:</para>
	  
	  <itemizedlist>
        <listitem>
          <para><ulink url="http://www.alsa-project.org/">ALSA</ulink> (libalsa).</para>
        </listitem>
        <listitem>
          <para><ulink url="http://jackaudio.org/">Jack Audio Connection Kit</ulink> (libjack).</para>
        </listitem>
      </itemizedlist>
	  
	  <para>On Debian-style distributions such as Ubuntu, you will require -dev packages additionally
	  to regular library packages.</para>
	  
      <para>libzzub packages can currently be downloaded from Aldrins SourceForge.net <ulink
      url="http://aldrin.sf.net">project website</ulink>. You can either
      download a release or build libzzub from the source repository. In this
      guide, we are going to download a release.</para>

      <orderedlist numeration="arabic">
        <listitem>
          <para>On the project website, click on
          <guilabel>Downloads</guilabel> to see available releases. You will
          see the downloads page on which one or more releases are
          listed.</para>
        </listitem>

        <listitem>
          <para>Download the sources of the most recent release. Usually, the
          link should be named something like libzzub <replaceable>x.x Source
          Release (x86, .tar.bz2)</replaceable>, where x.x is the release
          number.</para>
        </listitem>

        <listitem>
          <para>Unpack the downloaded sources into a new folder. You will get
          a new subfolder named something like
          <replaceable>libzzub-x.x</replaceable>:</para>

          <screen><prompt>[paniq@aspera tmp]$</prompt><command> tar -vxf <replaceable>libzzub-x.x.tar.bz2</replaceable></command>
...
libzzub-x.x/CREDITS
libzzub-x.x/INSTALL
libzzub-x.x/ChangeLog
libzzub-x.x/LICENCE</screen>
        </listitem>

        <listitem>
          <para>Change into the newly created folder. and run scons to configure libzzub for your system. If everything runs fine, you are going to see an output as below. If not, scons configure will tell you what is missing.</para>

          <screen><prompt>[paniq@aspera tmp]$</prompt> <command>cd <replaceable>libzzub-x.x</replaceable></command><prompt>
[paniq@aspera libzzub-x.x]$</prompt> <command>scons configure</command>
scons: Reading SConscript files ...
Checking for C header file zlib.h... yes
Checking for C header file CoreAudio/CoreAudio.h... no
Checking for C header file alsa/asoundlib.h... yes
Checking for C header file jack/jack.h... yes
Checking for C header file sys/soundcard.h... yes
Checking for llvm-config in PATH... (cached) /usr/bin/llvm-config
Checking for version of '/usr/bin/llvm-config --version'... (cached) 1.9
Finished configuration.

                  === Using ===                   
                    CoreAudio: no
                         JACK: yes
                         ALSA: yes
                          OSS: yes
                         LLVM: yes

                === Components ===                
               Lunar DSP Host: yes

               === Directories ===                
                     llvm-gcc: /home/paniq/llvm-gcc4-1.9-x86-linux-RHEL4/bin
                       Prefix: /usr/local
                 Install into: /usr/local
            Library Directory: /usr/local/lib

Please check if above settings reflect what you want, then build libzzub using
        scons
To install scons, run
        [sudo] scons install</screen>
		<para>You can configure scons to install into a different target folder than /usr/local, to prevent libzzub from installing system wide:</para>
		<screen><prompt>[paniq@aspera libzzub-x.x]$</prompt> <command>scons configure PREFIX=<replaceable>/home/paniq/usr</replaceable></command></screen>
		<para>scons saves all settings, so you never need to pass an option twice.</para>
		<para>If you wish to build libzzub without Lunar (and thus, missing out on a lot of nifty DSP plugins), you can turn it off:</para>
		<screen><prompt>[paniq@aspera libzzub-x.x]$</prompt> <command>scons configure LUNAR=<replaceable>False</replaceable></command></screen>
		<para>You can get a full list of options using the --help option:</para>
		<screen><prompt>[paniq@aspera libzzub-x.x]$</prompt> <command>scons --help</command></screen>
        </listitem>
        <listitem>
		<para>Now that everything is set up, build libzzub:</para>
		<screen><prompt>[paniq@aspera libzzub-x.x]$</prompt> <command>scons</command>
scons: Reading SConscript files ...
scons: done reading SConscript files.
scons: Building targets ...
...
scons: done building targets.</screen>
        </listitem>
        <listitem>
          <para>Now install libzzub to your system (you will need root rights if you are going to install libzzub system wide):</para>

          <screen><prompt>[paniq@aspera libzzub-x.x]$</prompt> <command>sudo scons install</command>
Password:
scons: Reading SConscript files ...
scons: done reading SConscript files.
scons: Building targets ...
Install file: "lib/libzzub" as "/usr/local/lib/libzzub"
...
scons: done building targets.</screen>
        </listitem>
      </orderedlist>

      <para>libzzub is now installed.</para>
	  </sect1>
	  <sect1 id="install_pyzzub">
	  <title>Building and installing pyzzub</title>
	  <para>libzzub comes with bindings for the Python programming language, allowing you to use all of its
	  functions within a Python script.</para>
	  <para>In order to run pyzzub with Python 2.4, <ulink url="http://python.net/crew/theller/ctypes/">ctypes</ulink> is an additional requirement.</para>
	  <para>pyzzub is contained within the libzzub source directory structure. To install pyzzub as a Python module, enter</para>
	  <screen><prompt>[paniq@aspera libzzub-x.x]$</prompt> <command>cd src/pyzzub</command>
<prompt>[paniq@aspera pyzzub]$</prompt> <command>python setup.py build</command>
...
copying zzub/zzub_classes.py -> build/lib/zzub
copying zzub/library.py -> build/lib/zzub
copying zzub/procwrap.py -> build/lib/zzub
copying zzub/zzub_flat.py -> build/lib/zzub
copying zzub/__init__.py -> build/lib/zzub
...
<prompt>[paniq@aspera pyzzub]$</prompt> <command>sudo python setup.py install</command></screen>
	  <para>If everything went ok, you should be able to use pyzzub from within Python:</para>
	  <screen><prompt>[paniq@aspera pyzzub]$</prompt> <command>python</command>
Python 2.4.4c1 (#2, Oct 11 2006, 21:51:02) 
[GCC 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
<prompt>&gt;&gt;&gt;</prompt> <command>import zzub</command>
<prompt>&gt;&gt;&gt;</prompt> <command>zzub.Player()</command>
&lt;zzub.Player object at 0xb7dc758c&gt;</screen>
	<para>pyzzub is now installed.</para>
	  </sect1>
  </chapter>

</book>