<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>libzzub User Manual</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"></HEAD
><BODY
CLASS="book"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="BOOK"
><A
NAME="AEN1"
></A
><DIV
CLASS="TITLEPAGE"
><H1
CLASS="title"
><A
NAME="AEN2"
>libzzub User Manual</A
></H1
><H3
CLASS="author"
><A
NAME="AEN5"
></A
>Leonard Ritter</H3
><P
CLASS="copyright"
>Copyright &copy; 2008 The libzzub Development Team</P
><DIV
><DIV
CLASS="abstract"
><P
></P
><A
NAME="AEN15"
></A
><P
>This book describes installation, configuration and usage of libzzub, a powerful
      music sequencing library for the GNU/Linux operating system.</P
><P
></P
></DIV
></DIV
><HR></DIV
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
>1. <A
HREF="#introduction"
>Introduction</A
></DT
><DT
>2. <A
HREF="#installation"
>Installation</A
></DT
><DD
><DL
><DT
>2.1. <A
HREF="#install_libzzub"
>Building and installing libzzub</A
></DT
><DD
><DL
><DT
>2.1.1. <A
HREF="#components"
>Required Packages</A
></DT
><DT
>2.1.2. <A
HREF="#ubuntu_packages"
>Ubuntu and Debian</A
></DT
><DT
>2.1.3. <A
HREF="#instructions"
>Downloading and Compiling</A
></DT
></DL
></DD
></DL
></DD
></DL
></DIV
><DIV
CLASS="chapter"
><HR><H1
><A
NAME="introduction"
></A
>Chapter 1. Introduction</H1
><P
>Welcome to the libzzub User Manual. This book helps you with
	configuration, installation and usage of libzzub, a powerful music sequencing
	library for the GNU/Linux operating system. If you are searching for a
	foundation of your next Soundtracker, libzzub is what you want. libzzub
	provides an extensible DSP plugin system, a wavetable, instruments, a
	multitrack sequencer, support for major soundcard API's and full compatibility
	with Jeskola Buzz on the Windows platform.</P
><P
>libzzub is currently being utilized as a core part of <A
HREF="http://aldrin.sf.net"
TARGET="_top"
>Aldrin</A
> and <A
HREF="http://trac.zeitherrschaft.org/buze"
TARGET="_top"
>Buz?</A
>.
	A <A
HREF="http://www.zzub.org"
TARGET="_top"
>community website</A
> revolving around these programs is currently being built.
	</P
></DIV
><DIV
CLASS="chapter"
><HR><H1
><A
NAME="installation"
></A
>Chapter 2. Installation</H1
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
NAME="install_libzzub"
>2.1. Building and installing libzzub</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
NAME="components"
>2.1.1. Required Packages</A
></H3
><P
>If you use a popular distribution of GNU/Linux,
      chances are that your local package manager already offers a libzzub
      package. If not, you will need to build libzzub yourself.</P
><P
>Independent of which distribution you use, building and installing
      libzzub shouldn't be hard, given that you follow this guide. If you have
      trouble installing libzzub, please contact your distribution maintainers
      and ask them to include support for libzzub.</P
><P
>libzzub consists of several components which have different
	  requirements. Some of these may already come with the distro that
	  you are using, some are a bit exotic and require individual building.
	  We have focused on keeping the number of dependencies small and to include
	  as much as required in the distribution package itself.</P
><P
>In order to assist you with building libzzub, libzzub features an
	  extensive configuration process that notifies you of missing dependencies.</P
><P
>First make sure that you have all programs and libraries installed
      required to build libzzub. Usually, all of them should be provided by
      your distribution of GNU/Linux. Please check with your distributions
      package manager documentation on how to search and install packages. You
      are going to need following packages:</P
><P
></P
><UL
><LI
><P
><A
HREF="http://www.python.org/"
TARGET="_top"
>Python 2.5</A
> or
          later.</P
></LI
><LI
><P
><A
HREF="http://www.scons.org/"
TARGET="_top"
>SCons 0.97</A
> or
          later.</P
></LI
><LI
><P
><A
HREF="http://gcc.gnu.org/"
TARGET="_top"
>GCC 4.0.1</A
> or later.</P
></LI
><LI
><P
><A
HREF="http://www.zlib.net/"
TARGET="_top"
>zlib</A
></P
></LI
><LI
><P
><A
HREF="http://www.mega-nerd.com/libsndfile/"
TARGET="_top"
>libsndfile 1.0.17</A
></P
></LI
><LI
><P
><A
HREF="http://www.mega-nerd.com/SRC/"
TARGET="_top"
>libsamplerate 0.1.3</A
></P
></LI
></UL
><P
>Depending on which sound API you wish to use, following libraries
	  are required as well:</P
><P
></P
><UL
><LI
><P
><A
HREF="http://www.alsa-project.org/"
TARGET="_top"
>ALSA</A
> (libalsa).</P
></LI
><LI
><P
><A
HREF="http://jackaudio.org/"
TARGET="_top"
>Jack Audio Connection Kit</A
> (libjack).</P
></LI
></UL
></DIV
><DIV
CLASS="sect2"
><HR><H3
CLASS="sect2"
><A
NAME="ubuntu_packages"
>2.1.2. Ubuntu and Debian</A
></H3
><P
>On Debian-style distributions such as Ubuntu, you will require -dev packages additionally
	  to regular library packages.
	  
	  The following command fetches the Debian or Ubuntu packages required for compiling libzzub and running Aldrin:
	  <PRE
CLASS="screen"
>sudo apt-get install python python-ctypes python-gtk2 librsvg2-common scons libsndfile1-dev zlib1g-dev libasound2-dev jackd libjack-dev libsamplerate0-dev libfftw3-dev</PRE
></P
><P
>Substitute fftw3-dev for libfftw3-dev if you are using Gutsy or earlier distributions of Ubuntu.</P
></DIV
><DIV
CLASS="sect2"
><HR><H3
CLASS="sect2"
><A
NAME="instructions"
>2.1.3. Downloading and Compiling</A
></H3
><P
>libzzub packages can currently be downloaded from Aldrin's SourceForge.net <A
HREF="http://aldrin.sf.net"
TARGET="_top"
>project website</A
>. You can either
      download a release or build libzzub from the source repository with the following command:
      <PRE
CLASS="screen"
>svn co http://svn.zeitherrschaft.org/zzub/trunk zzub</PRE
>
       In this guide, we are going to download a release.
	  </P
><P
></P
><OL
TYPE="1"
><LI
><P
>On the project website, click on
          <SPAN
CLASS="guilabel"
>Downloads</SPAN
> to see available releases. You will
          see the downloads page on which one or more releases are
          listed.</P
></LI
><LI
><P
>Download the sources of the most recent release. Usually, the
          link should be named something like libzzub <TT
CLASS="replaceable"
><I
>x.x Source
          Release (x86, .tar.bz2)</I
></TT
>, where x.x is the release
          number.</P
></LI
><LI
><P
>Unpack the downloaded sources into a new folder. You will get
          a new subfolder named something like
          <TT
CLASS="replaceable"
><I
>libzzub-x.x</I
></TT
>:</P
><PRE
CLASS="screen"
><SAMP
CLASS="prompt"
>[paniq@aspera tmp]$</SAMP
><B
CLASS="command"
> tar -vxf <TT
CLASS="replaceable"
><I
>libzzub-x.x.tar.bz2</I
></TT
></B
>
...
libzzub-x.x/CREDITS
libzzub-x.x/INSTALL
libzzub-x.x/ChangeLog
libzzub-x.x/LICENCE</PRE
></LI
><LI
><P
>Change into the newly created folder. and run scons to configure libzzub for your system. If everything runs fine, you are going to see an output as below. If not, scons configure will tell you what is missing.</P
><PRE
CLASS="screen"
><SAMP
CLASS="prompt"
>[paniq@aspera tmp]$</SAMP
> <B
CLASS="command"
>cd <TT
CLASS="replaceable"
><I
>libzzub-x.x</I
></TT
></B
><SAMP
CLASS="prompt"
>&#13;[paniq@aspera libzzub-x.x]$</SAMP
> <B
CLASS="command"
>scons configure</B
>
scons: Reading SConscript files ...
Checking for C header file zlib.h... yes
Checking for C header file sndfile.h... yes
Checking for C header file samplerate.h... yes
Checking for C header file fftw3.h... yes
Checking for C header file CoreAudio/CoreAudio.h... no
Checking for C header file alsa/asoundlib.h... yes
Checking for C header file jack/jack.h... yes
Checking for C header file sys/soundcard.h... yes
Checking for C header file ladspa.h... yes
Checking for C header file dssi.h... yes
Checking for 'sse' CPU flag... (cached) yes
Checking for 'sse2' CPU flag... (cached) yes
Finished configuration.

                  === Using ===                   
                    CoreAudio: no
                         JACK: yes
                         ALSA: yes
                          OSS: yes
        Use SSE CPU Extension: no
       Use SSE2 CPU Extension: yes
           Use Timestretching: yes

                === Components ===                
               Lunar DSP Host: yes
                 Lunar Target: gcc
                         DSSI: yes
                       LADSPA: yes
     pyzzub (zubb for Python): yes

               === Directories ===                
                       Prefix: /usr/local
                 Install into: /usr/local
            Library Directory: /usr/local/lib

          Generate Debug Info: False

Please check if above settings reflect what you want, then build libzzub using
        scons
To install scons, run
        [sudo] scons install
</PRE
><P
>You can configure scons to install into a different target folder than /usr/local, to prevent libzzub from installing system wide:</P
><PRE
CLASS="screen"
><SAMP
CLASS="prompt"
>[paniq@aspera libzzub-x.x]$</SAMP
> <B
CLASS="command"
>scons configure PREFIX=<TT
CLASS="replaceable"
><I
>/home/paniq/usr</I
></TT
></B
></PRE
><P
>scons saves all settings, so you never need to pass an option twice.</P
><P
>If you wish to build libzzub without Lunar (and thus, missing out on a lot of nifty DSP plugins), you can turn it off:</P
><PRE
CLASS="screen"
><SAMP
CLASS="prompt"
>[paniq@aspera libzzub-x.x]$</SAMP
> <B
CLASS="command"
>scons configure LUNAR=<TT
CLASS="replaceable"
><I
>False</I
></TT
></B
></PRE
><P
>You can get a full list of options using the --help option:</P
><PRE
CLASS="screen"
><SAMP
CLASS="prompt"
>[paniq@aspera libzzub-x.x]$</SAMP
> <B
CLASS="command"
>scons --help</B
></PRE
></LI
><LI
><P
>Now that everything is set up, build libzzub:</P
><PRE
CLASS="screen"
><SAMP
CLASS="prompt"
>[paniq@aspera libzzub-x.x]$</SAMP
> <B
CLASS="command"
>scons</B
>
scons: Reading SConscript files ...
scons: done reading SConscript files.
scons: Building targets ...
...
scons: done building targets.</PRE
></LI
><LI
><P
>Now install libzzub to your system (you will need root rights if you are going to install libzzub system wide):</P
><PRE
CLASS="screen"
><SAMP
CLASS="prompt"
>[paniq@aspera libzzub-x.x]$</SAMP
> <B
CLASS="command"
>sudo scons install</B
>
Password:
scons: Reading SConscript files ...
scons: done reading SConscript files.
scons: Building targets ...
Install file: "lib/libzzub" as "/usr/local/lib/libzzub"
...
scons: done building targets.</PRE
></LI
></OL
><P
>libzzub is now installed.</P
></DIV
></DIV
></DIV
></DIV
></BODY
></HTML
>
